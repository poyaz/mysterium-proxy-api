version: "2.3"
services:
  app:
    build:
      context: .
      dockerfile: ./docker/images/node/Dockerfile
    expose:
      - 3000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $PWD/storage/tmp:/data/storage/tmp
    environment:
      - DOCKER_REAL_PROJECT_PATH=$PWD
    networks:
      main:
        ipv4_address: 10.110.0.2
    restart: "always"

  redoc:
    image: redocly/redoc:latest
    volumes:
      - $PWD/storage/tmp/swagger.json:/usr/share/nginx/html/swagger.json
    environment:
      - SPEC_URL=swagger.json
    ports:
      - 4000:80
    networks:
      main:
        ipv4_address: 10.110.0.3
    restart: "always"

  postgres:
    image: postgres:11.10
    volumes:
      - ${PG_DIR_DATA:-postgres-storage}:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - $PWD/storage/docker/volume/postgres-migration/:/docker-entrypoint-initdb.d/
    networks:
      main:
        ipv4_address: 10.110.0.4
    restart: "always"

  redis:
    image: redis:7.0.4-alpine3.16
    volumes:
      - ${REDIS_DIR_DATA:-redis-storage}:/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      main:
        ipv4_address: 10.110.0.5
    restart: "always"

  docker-proxy:
    image: rancher/socat-docker:v0.2.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    privileged: true
    networks:
      main:
        ipv4_address: 10.110.0.6
    restart: "always"

  auth-nginx:
    image: nginx:1.20.0-alpine
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - nginx-conf-storage:/etc/nginx/conf.d/
      - nginx-entrypoint-storage:/docker-entrypoint.d/
    networks:
      main:
        ipv4_address: 10.110.0.7
    restart: "always"

  auth-grpc:
    build:
      context: ./docker/images/grpc
      dockerfile: Dockerfile
    image: myst-auth-grpc:latest
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      main:
        ipv4_address: 10.110.0.8
    restart: "always"

  autoheal:
    image: willfarrell/autoheal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    environment:
      - AUTOHEAL_CONTAINER_LABEL=autoheal
    networks:
      main:
        ipv4_address: 10.110.0.9
    restart: "always"

  build-myst-image:
    build:
      context: ./docker/images/myst
      dockerfile: Dockerfile
    image: myst-service:v1.0
    network_mode: "bridge"
    restart: "no"
    entrypoint: ""
    command: /bin/bash -c "sleep 1; exit"

  build-myst-connect-image:
    build:
      context: ./docker/images/myst-connect
      dockerfile: Dockerfile
    image: myst-connect-service:v1.0
    network_mode: "bridge"
    restart: "no"
    entrypoint: ""
    command: /bin/bash -c "sleep 1; exit"

volumes:
  postgres-storage: { }
  redis-storage: { }
  nginx-conf-storage:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $PWD/storage/docker/volume/nginx-conf
  nginx-entrypoint-storage:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $PWD/storage/docker/volume/nginx-entrypoint

networks:
  main:
    name: network-mysterium-proxy-main
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.110.0.0/20
          gateway: 10.110.0.1
